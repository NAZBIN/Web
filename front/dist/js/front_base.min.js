function FrontBase(){}function Auth(){var t=this;t.maskWrapper=$(".mask-wrapper"),t.scrollWrapper=$(".scroll-wrapper"),t.smsCaptcha=$(".sms-captcha-btn")}FrontBase.prototype.listenAuthBoxHover=function(){var t=$(".auth-box"),n=$(".user-more-box");t.hover(function(){n.show()},function(){n.hide()})},FrontBase.prototype.handleNavStatus=function(){var t=window.location.href,n=window.location.protocol+"//"+window.location.host,a=t.replace(n,"");console.log(a),$(".nav li").each(function(t,n){var e=$(n);if(e.children("a").attr("href")===a)return e.addClass("active").siblings().removeClass("active"),!1})},FrontBase.prototype.run=function(){this.listenAuthBoxHover(),this.handleNavStatus()},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenShowHideEvent=function(){var n=this,t=$(".signin-btn"),e=$(".signup-btn"),a=$(".close-btn");t.click(function(){n.showEvent()}),e.click(function(){n.showEvent(),n.scrollWrapper.css({left:"-400px"})}),a.click(function(){var t=n.scrollWrapper.css("left");console.log(t),t=parseInt(t),n.hideEvent(),t<0?n.scrollWrapper.animate({left:"0"}):n.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenSwitchEvent=function(){var n=this;$(".switch").click(function(){var t=n.scrollWrapper.css("left");(t=parseInt(t))<0?n.scrollWrapper.animate({left:"0"}):n.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenImgCaptchaEvent=function(){var t=$(".img-captcha");t.click(function(){t.attr("src","/account/img_captcha/?random="+Math.random())})},Auth.prototype.listenSigninEvent=function(){var s=this,t=$(".signin-group"),o=t.find("input[name='telephone']"),i=t.find("input[name='password']"),r=t.find("input[name='remember']");t.find(".submit-btn").click(function(t){t.preventDefault();var n=o.val(),e=i.val(),a=r.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:n,password:e,remember:a?1:0},success:function(t){if(200==t.code)s.hideEvent(),window.location.reload();else{var n=t.message;if("String"==typeof n||n.constructor==String)window.messageBox.show(n);else for(var e in n){var a=n[e][0];window.messageBox.show(a)}}},fail:function(t){console.log(t)}})})},Auth.prototype.listenSignupEvent=function(){var f=this,v=$(".signup-group");v.find(".submit-btn").click(function(t){t.preventDefault();var n=v.find("input[name='telephone']"),e=v.find("input[name='username']"),a=v.find("input[name='img_captcha']"),s=v.find("input[name='password1']"),o=v.find("input[name='password2']"),i=v.find("input[name='sms_captcha']"),r=n.val(),c=e.val(),p=a.val(),l=s.val(),u=o.val(),h=i.val();xfzajax.post({url:"/account/register/",data:{telephone:r,username:c,img_captcha:p,password1:l,password2:u,sms_captcha:h},success:function(t){if(200==t.code)f.hideEvent(),window.location.reload();else{var n=t.message;if("String"==typeof n||n.constructor==String)window.messageBox.show(n);else for(var e in n){var a=n[e][0];window.messageBox.show(a)}}},fail:function(t){console.log(t)}})})},Auth.prototype.smsSuccessEvent=function(){var t=this;messageBox.showSuccess("短信验证码发送成功！"),t.smsCaptcha.addClass("disabled");var n=60;t.smsCaptcha.unbind("click");var e=setInterval(function(){t.smsCaptcha.text(n+"s"),(n-=1)<=0&&(clearInterval(e),t.smsCaptcha.removeClass("disabled"),t.smsCaptcha.text("发送验证码"),t.listenSmsCaptchaEvent())},1e3)},Auth.prototype.listenSmsCaptchaEvent=function(){var n=this,t=$(".sms-captcha-btn"),e=$(".signup-group input[name='telephone']");t.click(function(){var t=e.val();t||messageBox.showInfo("请输入手机号码"),xfzajax.get({url:"/account/sms_captcha/",data:{telephone:t},success:function(t){200==t.code&&n.smsSuccessEvent()},fail:function(t){console.log(t)}})})},Auth.prototype.run=function(){var t=this;t.listenShowHideEvent(),t.listenSwitchEvent(),t.listenSigninEvent(),t.listenSignupEvent(),t.listenImgCaptchaEvent(),t.listenSmsCaptchaEvent()},$(function(){(new Auth).run()}),$(function(){(new FrontBase).run()}),$(function(){window.template&&(template.defaults.imports.timeSince=function(t){var n=new Date(t),e=n.getTime(),a=((new Date).getTime()-e)/1e3;return a<60?"刚刚":60<=a&&a<3600?(minutes=parseInt(a/60),minutes+"分钟前"):3600<=a&&a<86400?(hours=parseInt(a/3600),hours+"小时前"):86400<=a&&a<2592e3?(days=parseInt(a/86400),days+"天前"):n.getFullYear()+"/"+n.getMonth()+"/"+n.getDay()+" "+n.getHours()+":"+n.getMinutes()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
